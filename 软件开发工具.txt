软件开发工具

软件开发工具是用于辅助软件生命周期过程的基于计算机的工具。通常可以设计并实现工具来支持特定的软件工程方法，减少手工方式管理的负担。与软件工程方法一样，他们试图让软件工程更加系统化，工具的种类包括支持单个任务的工具及囊括整个生命周期的工具。

分类介绍
软件需求工具，包括需求建模工具和需求追踪工具。
软件设计工具，用于创建和检查软件设计，因为软件设计方法的多样性，这类工具的种类很多。
软件构造工具，包括程序编辑器、编译器和代码生成器、解释器和调试器等。
软件测试工具，包括测试生成器、测试执行框架、测试评价工具、测试管理工具和性能分析工具。
软件维护工具，包括理解工具（如可视化工具）和再造工具（如重构工具）。
软件配置管理工具，包括追踪工具、版本管理工具和发布工具。
软件工程管理工具，包括项目计划与追踪工具、风险管理工具和度量工具。
软件工程过程工具，包括建模工具、管理工具和软件开发环境。
软件质量工具，包括检查工具和分析工具。

工具包
软件开发工具包（Software Development Kit, 即 SDK）是一些被软件工程师用于为特定的软件包、软件框架、硬件平台、操作系统等建立应用软件的开发工具的集合。
它或许只是简单的为某个程序设计语言提供应用程序接口的一些文件，但也可能包括能与某种嵌入式系统通讯的复杂的硬件。一般的工具包括用于调试和其他用途的实用工具。SDK 还经常包括示例代码、支持性的技术注解或者其他的为基本参考资料澄清疑点的支持文档。
软件工程师通常从目标系统开发者那里获得软件开发包。为了鼓励开发者使用其系统或者语言，许多 SDK 是免费提供的。SDK 经常可以直接从互联网下载。有时也被作为营销手段。例如，甲产品或许会免费提供构件SDK 以鼓励人们使用它，从而会吸引更多人由于能免费为其编程而购买其构件。
SDK 可能附带了使其不能在不兼容的许可证下开发软件的许可证。例如一个专有的 SDK 可能与自由软件开发抵触。而GPL能使 SDK 与专有软件开发近乎不兼容。LGPL下的SDK则没有这个问题。
